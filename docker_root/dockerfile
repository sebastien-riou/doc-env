#list images:
#	sudo docker images
#
#clean up images/containers: 
#	sudo docker rm $(sudo docker ps -a -q)
#	sudo docker rmi $(sudo docker images -q)
#
#build this: 
#	sudo docker build -t myapp .
#
#run this:   
#       sudo docker run --privileged -it -v `pwd`:/work/ myapp
#
#backup this:
#	sudo docker save -o myapp.tar myapp
#	sudo chown user myapp.tar
#
#restore this:
#	sudo docker load -i myapp.tar

#FROM ubuntu:artful
FROM ubuntu:bionic

# Set the working directory 
WORKDIR /bin

# Copy the current directory contents into the container at /bin
ADD . /bin

# Install any needed packages 
RUN apt-get update
RUN apt-get -y install software-properties-common
RUN add-apt-repository universe
RUN add-apt-repository restricted
RUN add-apt-repository multiverse
RUN apt-get update 

#RUN apt-get -y install ttf-lyx
RUN apt-get -qq -y install fonts-lyx

RUN apt-get install -y make cmake
RUN apt-get install -y g++
RUN apt-get install -y ruby ruby-dev default-jre graphviz 
RUN apt-get install -y nodejs npm phantomjs
RUN apt-get -qq -y install bison flex libffi-dev libxml2-dev libgdk-pixbuf2.0-dev libcairo2-dev libpango1.0-dev 

RUN gem install asciidoctor-pdf --pre
RUN gem install rouge
RUN gem install asciidoctor-diagram

ENV MATHEMATICAL_SKIP_STRDUP 1 
RUN gem install mathematical

#this generates a lot of warnings and takes a long time, but in the end it works (warnings related to test fixtures)
RUN gem install asciidoctor-mathematical

RUN npm i wavedrom-cli --save-dev

RUN apt-get install -y \
    nano \
    zsh \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*



#RUN ln -s /usr/bin/python2.7 /usr/bin/python

# Make port 80 available to the world outside this container
EXPOSE 80

# Define environment variable
#ENV NAME Value
#needed for wavedrom
ENV QT_QPA_PLATFORM offscreen

#needed to be able to execute nano
ENV TERM xterm

CMD ["export", "PATH=$PATH:/bin"]
# Run app.py when the container launches
#CMD ["python", "app.py"]
#CMD ["/bin/bash"]
#CMD ["ln","-s","/usr/bin/python2.7","/usr/bin/python"]
WORKDIR "/work"
ENTRYPOINT zsh 

